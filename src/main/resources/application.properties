
paytm.mobile=7780528311
paytm.email= sureshchintamjntu504@gmail.com


# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/OnlineBanking

# Username and secret
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
#Enabling H2 console
spring.h2.console.enabled=true

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/home/suresh/Downloads/dlloacation


#
#
#spring.thymeleaf.cache=false
#paypal.mode=sandbox
#paypal.client.id=ATXVGaw8G9oJjqFEZfCpriKYys85FDtxUSKp4oRMbINYjWKE6BWOehkc9Ijz-dXg2ePzLyz5ofsqSREm
#paypal.clinet.secret=EEXSeL1uofDjVuKmJq6ZyuSmtJuhxg378MEDaDk5IK0rhSaT4-Rg1TgTNXGWZPl_7wrwgrebzMlRKQiC
#







#app:
#    properties:
#      lucene:
#        indexInfoFile: ${spring.jpa.properties.hibernate.search.default.indexBase}/index.properties
#        reindex: false
#      storage:
#        home: ${user.home}/shipitwith
#        basePath: ${app.properties.storage.home}/uploads/
#        staticFilesPrefix: /files/
#      appUrl: /app/

#`hibernate_sequence' doesn't exist
spring.jpa.hibernate.use-new-id-generator-mappings=false

#spring.jpa.hibernate.ddl-auto=create
